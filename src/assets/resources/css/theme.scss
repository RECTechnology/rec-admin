@import "~@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// **Be sure that you only ever include this mixin once!**
@include mat-core();

// Define the theme.
$candy-app-primary: mat-palette($mat-blue);
$candy-app-accent: mat-palette($mat-red, A200, A100, A400);
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent);


a {
  color: #0098db;
}

a:hover,
a:focus,
a:visited {
  color: rgb(25, 105, 180);
}

$main-color: #0098db; // the color of your brand
$main-color-dark: #0098db; // the dark color of your brand

$main-color-sbox: #c9b400; // the color of your brand
$main-color-dark-sbox: #a89600; // the dark color of your brand

$sidemenu-color: $main-color; // the color of your brand
$sidemenu-color-dark: #222d31; // the dark color of your brand

// .sandbox {
//   $main-color:      rgb(224, 238, 33);  // the color of your brand
//   $main-color-dark: rgb(206, 194, 25);  // the dark color of your brand
// }

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$candy-app-primary: mat-palette($mat-blue);
$candy-app-accent: mat-palette($mat-purple, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);
